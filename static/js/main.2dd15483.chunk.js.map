{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx","Clock/Clock.module.css"],"names":["Clock","timerId","state","currentDate","Date","this","setInterval","setState","console","log","toLocaleTimeString","clearInterval","className","style","currentTime","React","Component","App","isClockVisible","clockName","Math","floor","random","showClock","hideClock","renameClock","type","onClick","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sOAWMA,E,4MACJC,a,IAEAC,MAAe,CACbC,YAAa,IAAIC,M,uDAGnB,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,aAAY,WACzB,EAAKC,SAAS,CACZJ,YAAa,IAAIC,OAInBI,QAAQC,IAAI,EAAKP,MAAMC,YAAYO,wBAClC,O,kCAGL,WACML,KAAKJ,SACPU,cAAcN,KAAKJ,W,oBAIvB,WACE,IAAQE,EAAgBE,KAAKH,MAArBC,YAER,OACE,qBAAKS,UAAWC,IAAMC,YAAtB,SACGX,EAAYO,2B,GA7BDK,IAAMC,WAmCXhB,ICnCTiB,E,4MACJf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAG7BC,UAAY,kBAAM,EAAKhB,SAAS,CAAEW,gBAAgB,K,EAElDM,UAAY,kBAAM,EAAKjB,SAAS,CAAEW,gBAAgB,K,EAElDO,YAAc,kBAAM,EAAKlB,SAAS,CAAEY,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAE/D,WACE,MAAsCjB,KAAKH,MAAnCgB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECM,GAAkB,cAAC,EAAD,CAAOC,UAAWA,IAErC,sBAAKP,UAAU,UAAf,UACE,wBAAQA,UAAU,eAAec,KAAK,SAASC,QAAStB,KAAKkB,UAA7D,wBAGA,wBAAQX,UAAU,eAAec,KAAK,SAASC,QAAStB,KAAKmB,UAA7D,wBAGA,wBAAQZ,UAAU,eAAec,KAAK,SAASC,QAAStB,KAAKoB,YAA7D,oC,GA5BQV,IAAMC,WAqCTC,IC7CfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U,kBCJ1BC,EAAOC,QAAU,CAAC,YAAc,8B","file":"static/js/main.2dd15483.chunk.js","sourcesContent":["import React from 'react';\nimport style from './Clock.module.css';\n\ntype Props = {\n  clockName: number;\n};\n\ninterface State {\n  currentDate: Date;\n}\n\nclass Clock extends React.Component<Props, State> {\n  timerId?: NodeJS.Timeout;\n\n  state: State = {\n    currentDate: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({\n        currentDate: new Date(),\n      });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.currentDate.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { currentDate } = this.state;\n\n    return (\n      <div className={style.currentTime}>\n        {currentDate.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Clock/Clock';\n\ntype Props = {};\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: number;\n}\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 100),\n  };\n\n  showClock = () => this.setState({ isClockVisible: true });\n\n  hideClock = () => this.setState({ isClockVisible: false });\n\n  renameClock = () => this.setState({ clockName: Math.floor(Math.random() * 100) });\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {isClockVisible && <Clock clockName={clockName} />}\n\n        <div className=\"buttons\">\n          <button className=\"buttons__btn\" type=\"button\" onClick={this.showClock}>\n            Show Clock\n          </button>\n          <button className=\"buttons__btn\" type=\"button\" onClick={this.hideClock}>\n            Hide Clock\n          </button>\n          <button className=\"buttons__btn\" type=\"button\" onClick={this.renameClock}>\n            Rename Clock\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentTime\":\"Clock_currentTime__4j_H4\"};"],"sourceRoot":""}